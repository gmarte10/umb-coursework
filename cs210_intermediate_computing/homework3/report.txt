1. Enter the number of hours it took you to complete the project between
   the <<< and >>> signs below (eg, <<<10>>>).

   <<<11>>>
   
2. Enter the difficulty level (1: very easy; 5: very difficult) of the project
   between the <<< and >>> signs below (eg, <<<3>>>).

   <<<5>>>

3. Provide a short description of how you approached each problem, issues you 
   encountered, and how you resolved those issues.

   Problem 1 (Autocomplete Term): I approached this problem by first reading
   the project3 pdf as carefully as possible. Afterwards I read the
   checklist and began using it as a guide as I wrote my code. The biggest
   issue I had with this problem was the compare function in the helper
   prefix order comparator. I kept getting errors when trying to compare a
   and b substrings. At first I thought I was not writing the length of the
   substring code correctly. However, after some trial and error I was
   finally able to fix everything by using the compareTo() method. Overall
   this problem felt a lot more straightforward than the other two as it
   used a lot of the techniques and code from the previous exercises.

   Problem 2 (Binary Search Deluxe): I approached this problem similar to
   the first. I spent time rereading and trying to understand the
   instructions for problem 2 on the project3 pdf. I then used the
   checklist as a guide again. The biggest issue I had with this problem
   was the if statement conditions and adjusting hi and lo when the key
   matched a[mid]. These two issues took me a really long time to
   resolve and understand. I was able to solve this by getting help from
   the instructors on piazza and thinking about it more. I fixed the
   conditions by allowing them to accept more than -1, 0 and 1 from the
   compare functions. I fixed the hi and lo adjustments by making simple
   example traces and figuring out what works through trial and error.

   Problem 3 (Autocomplete): For this problem I first focused on
   reading the problem 3 part on the pdf and then used the checklist
   as a guide again. One of the biggest issues I had was constructing
   the matches array. When first making the array I thought I had done
   everything correctly. The errors I kept getting seemed to be coming
   from that array code as my other code seemed correct. I was not
   able to figure it out as it was very confusing and hard to understand.
   I was able to fix other issues by getting help on piazza like finding
   the number of terms that match prefix by using the numberOfMatches
   function. I also figured out how to implement that in that function
   by thinking about it logically and using trace examples.


4. Did you receive help from anyone? List their names, status (classmate, 
   CS210 grad, TA, other), and the nature of help received.

   Name               Status       Help Received
   ----               ------       -------------
   Suncharn           SI            He helped me debug my code during
   Pipithkul          Instructor    the SI sessions. He also gave me
                                    ideas that helped me solve
                                    issues when I got stuck on
                                    something.

   Piazza             Instructors   The instructors in piazza gave me
                                    helpful ideas that allowed me to
                                    figure out issues I was having.
                                    They also gave me useful
                                    examples that made it easier
                                    to understand what I had to do.

5. List any other comments here. Feel free to provide any feedback on how
   much you learned from doing the assignment, and whether you enjoyed
   doing it.

   Overall I learned a lot by doing this assignment, especially when it
   comes to using and implementing comparators and their methods. I
   enjoyed doing the assignment for the most part, except for the last
   problem, which I could not figure out. Something that I would
   improve upon would be to start the project earlier. I would also
   try to read the problems from the writeup earlier to understand
   concepts better.
