1. Enter the number of hours it took you to complete the project between
   the <<< and >>> signs below (eg, <<<10>>>).

   <<<9>>>
   
2. Enter the difficulty level (1: very easy; 5: very difficult) of the project
   between the <<< and >>> signs below (eg, <<<3>>>).

   <<<5>>>

3. Provide a short description of how you approached each problem, issues you 
   encountered, and how you resolved those issues.

   Problem 1 (Brute-force Implementation)
      Approach:
      I already had an idea about how to do some of the methods
      from the discussion sessions. I read the write up to make sure
      I understood what was going on and then began doing all of the
      simple straightforward methods. I used the checklist as a guide
      and did each method one by one.

      Issues and resolution:
      The biggest issue I had was in the nearest(Point2D p, int k) method. At
      first Gradescope showed me that there was nothing for my output. This
      meant that my MinPQ had some type of problem. I checked and saw that I
      never actually inserted any points into it. After doing this, I ended
      up with another problem where I was missing a point and getting
      different outputs than expected. Gradescope gave the hint of using a
      comparator and so I found that there was distanceToOrder in the API.
      I ended up using this for both my MinPQ's. This got my output closer
      to what was expected, but I still had some points that were off and
      one missing. I kept trying to restructure the code, but nothing worked
      to fix that issue. Then I remembered that in the discussion sessions,
      James said to put all the points into the MinPQ and then put k of them
      into the second. Before thinking of this I was putting points in after
      passing them through conditions. After putting k points into the
      second MinPQ, I then realized that I did not have to manually
      implement a condition to find the nearest points as the comparator in
      the MinPQ did that for me. After realizing that I was able to resolve
      the problem by just checking if the given point was different from the
      one in the first MinPQ.


   Problem 2 (2d-tree Implementation)
      Approach:
      I first took notes on the write up and made sure I understood
      all the ideas and what I was supposed to implement. I basically
      simplified all the different things the problem was asking for
      while taking notes. I then followed the discussion session recording
      step by step.

      Issues and resolution:
      I had many issues that I was not able to resolve for this problem.
      However, the one that I was able to fix was the size method. At first,
      I did not know why I was getting an error as it was simply returning N.
      However, after attempting to fix the put() method, I saw that I was
      creating a new node when x was equal to null. I then realized that by
      adding a new node, I was also adding a new key/value pair, which meant
      I had to increase N by one. After doing this I was able to fix the
      issue. This was one of the few methods that I could complete correctly.
      I kept trying to fix the other ones by rewriting code, looking at
      lecture slides and discussion session recordings. Unfortunately, I
      did not have enough time and I was not able to view the Zoom
      recordings on the last two days of the project.


4. Did you receive help from anyone? List their names, status (classmate, 
   CS210 grad, TA, other), and the nature of help received.

   Name               Status       Help Received
   ----               ------       -------------

   James               TA          He explained the concepts and ideas
   Michaud                         that I was supposed to implement in
                                   a way that was very understandable.
                                   He also gave useful hints on the
                                   complex implementations.


5. List any other comments here. Feel free to provide any feedback on how
   much you learned from doing the assignment, and whether you enjoyed
   doing it.

   The second problem of this project was extremely difficult
   and frustrating. I spent a long time trying to find issues with my
   code, but was unsuccessful. Overall, I wish I had started the project
   earlier to allow myself more time to do the second problem. Even
   though I had a lot of issues, I definitely learned a lot more about
   symbol tables and how to use them.
